/**
 * ** Copyright (c) 2016-present,
 * ** Jaguar0625, gimre, BloodyRookie, Tech Bureau, Corp. All rights reserved.
 * **
 * ** This file is part of Catapult.
 * **
 * ** Catapult is free software: you can redistribute it and/or modify
 * ** it under the terms of the GNU Lesser General Public License as published by
 * ** the Free Software Foundation, either version 3 of the License, or
 * ** (at your option) any later version.
 * **
 * ** Catapult is distributed in the hope that it will be useful,
 * ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 * ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * ** GNU Lesser General Public License for more details.
 * **
 * ** You should have received a copy of the GNU Lesser General Public License
 * ** along with Catapult. If not, see <http://www.gnu.org/licenses/>.
 **/

package io.nem.sdk.infrastructure.directconnect.dataaccess.mappers;

/**
 * Transaction status codes.
 */
public enum TransactionStatusCode {
	SUCCESS(0X00000000),
	NEUTRAL(0X40000000),
	FAILURE(0X80000000),
	FAILURE_CORE_PAST_DEADLINE(0X80430001),
	FAILURE_CORE_FUTURE_DEADLINE(0X80430002),
	FAILURE_CORE_INSUFFICIENT_BALANCE(0X80430003),
	FAILURE_CORE_TOO_MANY_TRANSACTIONS(0X80430004),
	FAILURE_CORE_NEMESIS_ACCOUNT_SIGNED_AFTER_NEMESIS_BLOCK(0X80430005),
	FAILURE_CORE_WRONG_NETWORK(0X80430006),
	FAILURE_CORE_INVALID_ADDRESS(0X80430007),
	FAILURE_CORE_INVALID_VERSION(0X80430008),
	FAILURE_CORE_INVALID_TRANSACTION_FEE(0X80430009),
	FAILURE_CORE_BLOCK_HARVESTER_INELIGIBLE(0X8043000A),
	FAILURE_HASH_EXISTS(0X81480001),
	FAILURE_SIGNATURE_NOT_VERIFIABLE(0X80530008),
	FAILURE_ACCOUNTLINK_INVALID_ACTION(0X804C0001),
	FAILURE_ACCOUNTLINK_LINK_ALREADY_EXISTS(0X804C0002),
	FAILURE_ACCOUNTLINK_LINK_DOES_NOT_EXIST(0X804C0003),
	FAILURE_ACCOUNTLINK_UNLINK_DATA_INCONSISTENCY(0X804C0004),
	FAILURE_ACCOUNTLINK_REMOTE_ACCOUNT_INELIGIBLE(0X804C0005),
	FAILURE_ACCOUNTLINK_REMOTE_ACCOUNT_SIGNER_NOT_ALLOWED(0X804C0006),
	FAILURE_ACCOUNTLINK_REMOTE_ACCOUNT_PARTICIPANT_NOT_ALLOWED(0X804C0007),
	FAILURE_AGGREGATE_TOO_MANY_TRANSACTIONS(0X80410001),
	FAILURE_AGGREGATE_NO_TRANSACTIONS(0X80410002),
	FAILURE_AGGREGATE_TOO_MANY_COSIGNATURES(0X80410003),
	FAILURE_AGGREGATE_REDUNDANT_COSIGNATURES(0X80410004),
	FAILURE_AGGREGATE_INELIGIBLE_COSIGNERS(0X80410005),
	FAILURE_AGGREGATE_MISSING_COSIGNERS(0X80410006),
    FAILURE_HASH_LOCK_INVALID_MOSAIC_ID(0X80480001),
    FAILURE_HASH_LOCK_INVALID_MOSAIC_AMOUNT(0X80480002),
    FAILURE_HASH_LOCK_HASH_EXISTS(0X80480003),
    FAILURE_HASH_LOCK_HASH_DOES_NOT_EXIST(0X80480004),
	FAILURE_HASH_LOCK_INACTIVE_HASH(0X80480005),
	FAILURE_HASH_LOCK_INVALID_DURATION(0X80480006),
	FAILURE_SECRET_LOCK_INVALID_HASH_ALGORITHM(0X80520001),
	FAILURE_SECRET_LOCK_HASH_EXISTS(0X80520002),
	FAILURE_SECRET_LOCK_HASH_NOT_IMPLEMENTED(0X80520003),
	FAILURE_SECRET_LOCK_PROOF_SIZE_OUT_OF_BOUNDS(0X80520004),
	FAILURE_SECRET_LOCK_SECRET_MISMATCH(0X80520005),
	FAILURE_SECRET_LOCK_UNKNOWN_COMPOSITE_KEY(0X80520006),
	FAILURE_SECRET_LOCK_INACTIVE_SECRET(0X80520007),
	FAILURE_SECRET_LOCK_HASH_ALGORITHM_MISMATCH(0X80520008),
	FAILURE_SECRET_LOCK_INVALID_DURATION(0X80520009),
	FAILURE_MOSAIC_INVALID_DURATION(0X804D0001),
	FAILURE_MOSAIC_INVALID_NAME(0X804D0002),
	FAILURE_MOSAIC_NAME_ID_MISMATCH(0X804D0003),
	FAILURE_MOSAIC_EXPIRED(0X804D0004),
	FAILURE_MOSAIC_OWNER_CONFLICT(0X804D0005),
	FAILURE_MOSAIC_ID_MISMATCH(0X804D0006),
	FAILURE_MOSAIC_PARENT_ID_CONFLICT(0X804D0064),
	FAILURE_MOSAIC_INVALID_PROPERTY(0X804D0065),
	FAILURE_MOSAIC_INVALID_FLAGS(0X804D0066),
	FAILURE_MOSAIC_INVALID_DIVISIBILITY(0X804D0067),
	FAILURE_MOSAIC_INVALID_SUPPLY_CHANGE_DIRECTION(0X804D0068),
	FAILURE_MOSAIC_INVALID_SUPPLY_CHANGE_AMOUNT(0X804D0069),
	FAILURE_MOSAIC_INVALID_ID(0X804D006A),
	FAILURE_MOSAIC_MODIFICATION_DISALLOWED(0X804D006B),
	FAILURE_MOSAIC_MODIFICATION_NO_CHANGES(0X804D006C),
	FAILURE_MOSAIC_SUPPLY_IMMUTABLE(0X804D006D),
	FAILURE_MOSAIC_SUPPLY_NEGATIVE(0X804D006E),
	FAILURE_MOSAIC_SUPPLY_EXCEEDED(0X804D006F),
	FAILURE_MOSAIC_NON_TRANSFERABLE(0X804D0070),
	FAILURE_MOSAIC_MAX_MOSAICS_EXCEEDED(0X804D0071),
	FAILURE_MULTISIG_MODIFY_ACCOUNT_IN_BOTH_SETS(0X80550001),
	FAILURE_MULTISIG_MODIFY_MULTIPLE_DELETES(0X80550002),
	FAILURE_MULTISIG_MODIFY_REDUNDANT_MODIFICATIONS(0X80550003),
	FAILURE_MULTISIG_MODIFY_UNKNOWN_MULTISIG_ACCOUNT(0X80550004),
	FAILURE_MULTISIG_MODIFY_NOT_A_COSIGNER(0X80550005),
	FAILURE_MULTISIG_MODIFY_ALREADY_A_COSIGNER(0X80550006),
	FAILURE_MULTISIG_MODIFY_MIN_SETTING_OUT_OF_RANGE(0X80550007),
	FAILURE_MULTISIG_MODIFY_MIN_SETTING_LARGER_THAN_NUM_COSIGNATORIES(0X80550008),
	FAILURE_MULTISIG_MODIFY_UNSUPPORTED_MODIFICATION_TYPE(0X80550009),
	FAILURE_MULTISIG_MODIFY_MAX_COSIGNED_ACCOUNTS(0X8055000A),
	FAILURE_MULTISIG_MODIFY_MAX_COSIGNERS(0X8055000B),
	FAILURE_MULTISIG_MODIFY_LOOP(0X8055000C),
	FAILURE_MULTISIG_MODIFY_MAX_MULTISIG_DEPTH(0X8055000D),
	FAILURE_MULTISIG_OPERATION_NOT_PERMITTED_BY_ACCOUNT(0X8055000E),
	FAILURE_NAMESPACE_INVALID_DURATION(0X804E0001),
	FAILURE_NAMESPACE_INVALID_NAME(0X804E0002),
	FAILURE_NAMESPACE_NAME_ID_MISMATCH(0X804E0003),
	FAILURE_NAMESPACE_EXPIRED(0X804E0004),
	FAILURE_NAMESPACE_OWNER_CONFLICT(0X804E0005),
	FAILURE_NAMESPACE_ID_MISMATCH(0X804E0006),
	FAILURE_NAMESPACE_INVALID_NAMESPACE_TYPE(0X804E0064),
	FAILURE_NAMESPACE_ROOT_NAME_RESERVED(0X804E0065),
	FAILURE_NAMESPACE_TOO_DEEP(0X804E0066),
	FAILURE_NAMESPACE_PARENT_UNKNOWN(0X804E0067),
	FAILURE_NAMESPACE_ALREADY_EXISTS(0X804E0068),
	FAILURE_NAMESPACE_ALREADY_ACTIVE(0X804E0069),
	FAILURE_NAMESPACE_ETERNAL_AFTER_NEMESIS_BLOCK(0X804E006A),
	FAILURE_NAMESPACE_MAX_CHILDREN_EXCEEDED(0X804E006B),
	FAILURE_NAMESPACE_ALIAS_INVALID_ACTION(0X804E006C),
	FAILURE_NAMESPACE_ALIAS_NAMESPACE_UNKNOWN(0X804E006D),
	FAILURE_NAMESPACE_ALIAS_ALREADY_EXISTS(0X804E006E),
	FAILURE_NAMESPACE_ALIAS_DOES_NOT_EXIST(0X804E006F),
	FAILURE_NAMESPACE_ALIAS_OWNER_CONFLICT(0X804E0070),
	FAILURE_NAMESPACE_ALIAS_UNLINK_TYPE_INCONSISTENCY(0X804E0071),
	FAILURE_NAMESPACE_ALIAS_UNLINK_DATA_INCONSISTENCY(0X804E0072),
	FAILURE_NAMESPACE_ALIAS_INVALID_ADDRESS(0X804E0073),
	FAILURE_PROPERTY_INVALID_PROPERTY_TYPE(0X80500001),
	FAILURE_PROPERTY_MODIFICATION_TYPE_INVALID(0X80500002),
	FAILURE_PROPERTY_MODIFICATION_ADDRESS_INVALID(0X80500003),
	FAILURE_PROPERTY_MODIFICATION_OPERATION_TYPE_INCOMPATIBLE(0X80500004),
	FAILURE_PROPERTY_MODIFY_UNSUPPORTED_MODIFICATION_TYPE(0X80500005),
	FAILURE_PROPERTY_MODIFICATION_REDUNDANT(0X80500006),
	FAILURE_PROPERTY_MODIFICATION_NOT_ALLOWED(0X80500007),
	FAILURE_PROPERTY_MODIFICATION_COUNT_EXCEEDED(0X80500008),
	FAILURE_PROPERTY_VALUES_COUNT_EXCEEDED(0X80500009),
	FAILURE_PROPERTY_VALUE_INVALID(0X8050000A),
	FAILURE_PROPERTY_SIGNER_ADDRESS_INTERACTION_NOT_ALLOWED(0X8050000B),
	FAILURE_PROPERTY_MOSAIC_TRANSFER_NOT_ALLOWED(0X8050000C),
	FAILURE_PROPERTY_TRANSACTION_TYPE_NOT_ALLOWED(0X8050000D),
	FAILURE_TRANSFER_MESSAGE_TOO_LARGE(0X80540001),
	FAILURE_TRANSFER_OUT_OF_ORDER_MOSAICS(0X80540002),
	FAILURE_CHAIN_UNLINKED(0X80FF0001),
	FAILURE_CHAIN_BLOCK_NOT_HIT(0X80FF0002),
	FAILURE_CHAIN_BLOCK_INCONSISTENT_STATE_HASH(0X80FF0003),
	FAILURE_CHAIN_BLOCK_INCONSISTENT_RECEIPTS_HASH(0X80FF0004),
	FAILURE_CHAIN_UNCONFIRMED_CACHE_TOO_FULL(0X80FF0005),
	FAILURE_CONSUMER_EMPTY_INPUT(0X80FE0001),
	FAILURE_CONSUMER_BLOCK_TRANSACTIONS_HASH_MISMATCH(0X80FE0002),
	FAILURE_CONSUMER_REMOTE_CHAIN_TOO_MANY_BLOCKS(0X80FE0004),
	FAILURE_CONSUMER_REMOTE_CHAIN_IMPROPER_LINK(0X80FE0005),
	FAILURE_CONSUMER_REMOTE_CHAIN_DUPLICATE_TRANSACTIONS(0X80FE0006),
	FAILURE_CONSUMER_REMOTE_CHAIN_UNLINKED(0X80FE0007),
	FAILURE_CONSUMER_REMOTE_CHAIN_MISMATCHED_DIFFICULTIES(0X80FE0008),
	FAILURE_CONSUMER_REMOTE_CHAIN_SCORE_NOT_BETTER(0X80FE0009),
	FAILURE_CONSUMER_REMOTE_CHAIN_TOO_FAR_BEHIND(0X80FE000A),
	FAILURE_CONSUMER_REMOTE_CHAIN_TOO_FAR_IN_FUTURE(0X80FE000B),
	FAILURE_EXTENSION_PARTIAL_TRANSACTION_CACHE_PRUNE(0X80450101),
	FAILURE_EXTENSION_PARTIAL_TRANSACTION_DEPENDENCY_REMOVED(0X80450102);

	final private long value;

	/**
	 * Constructor.
	 *
	 * @param value Enum value.
	 */
	TransactionStatusCode(final long value) {
		this.value = value;
	}

	/**
	 * Gets enum value.
	 *
	 * @param value Raw value.
	 * @return Enum value.
	 */
	public static TransactionStatusCode rawValueOf(final int value) {
		for (TransactionStatusCode current : TransactionStatusCode.values()) {
			if (value == current.getValue()) {
				return current;
			}
		}
		throw new IllegalArgumentException(value + " was not a backing value for TransactionStatusCode.");
	}

	/**
	 * Returns enum value.
	 *
	 * @return enum value
	 */
	public long getValue() {
		return this.value;
	}
}
